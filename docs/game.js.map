{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scenes/Main/index.ts","webpack:///./src/home.ts"],"names":["MainScene","Phaser","Scene","constructor","preload","load","setBaseURL","image","create","add","particles","emitter","createEmitter","speed","scale","start","end","blendMode","logo","physics","setVelocity","setBounce","setCollideWorldBounds","startFollow","scene","i","scenes","push","config","type","AUTO","backgroundColor","mode","Scale","NONE","autoCenter","CENTER_BOTH","parent","width","height","default","arcade","gravity","y","window","game","Game"],"mappings":"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","file":"game.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { BASE_URL, PATH_URL } from '@/const'\nexport class MainScene extends Phaser.Scene {\n  constructor() {\n    super('MainScene')\n  }\n\n  preload() {\n    this.load.setBaseURL('https://labs.phaser.io')\n    this.load.image('sky', 'assets/skies/space3.png')\n    this.load.image('logo', 'assets/sprites/phaser3-logo.png')\n    this.load.image('red', 'assets/particles/red.png')\n    // this.load.setBaseURL(BASE_URL)\n    // this.load.setPath(PATH_URL)\n    // this.load.image('bg', 'images/bg.jpg')\n    // console.log('git submodule test')\n  }\n\n  create() {\n    this.add.image(400, 300, 'sky');\n    const particles = this.add.particles('red');\n    const emitter = particles.createEmitter({\n      speed: 100,\n      scale: { start: 1, end: 0 },\n      blendMode: 'ADD'\n    });\n    const logo = this.physics.add.image(400, 100, 'logo');\n    logo.setVelocity(100, 200);\n    logo.setBounce(1, 1);\n    logo.setCollideWorldBounds(true);\n\n    emitter.startFollow(logo);\n    // this.add.image(0, 0, 'bg').setOrigin(0, 0)\n  }\n}\n","import * as scenes from '@/scenes'\n\nconst scene = []\nfor (let i in scenes) {\n  scene.push(scenes[i])\n}\n\nconst config: any = {\n  type: Phaser.AUTO,\n  backgroundColor: 0x000000,\n  scale: {\n    mode: Phaser.Scale.NONE,\n    autoCenter: Phaser.Scale.CENTER_BOTH,\n    parent: 'app',\n    width: 800,\n    height: 600\n  },\n  physics: {\n    default: 'arcade',\n    arcade: {\n      gravity: { y: 200 }\n    }\n  },\n  // audio: {\n  //   noAudio: true\n  // },\n  // banner: {\n  //   hidePhaser: true\n  // },\n  scene\n}\n\nwindow.game = new Phaser.Game(config)\n"],"sourceRoot":""}